<?php
// $Id$
/**
* Supports TOPS integration with Drupal
* @file
**/

// initialize autoloaders and dependency injection

use Drupal\tops\Identity\TDrupalAccount;
use Symfony\Component\HttpFoundation\Request;
use Tops\sys\TPath;

require_once(__DIR__.'/../../../../lib/Tops/start/autoload.php');
require_once(__DIR__.'/../../../../lib/Tops/start/init.php');

/**
 * Implements hook_menu().
 */
function tops_menu()
{
    return \Drupal\tops\TopsModule::GetRoutes();
}

/**
 * Handles tops/service route
 *
 * @param string $serviceCode
 * @param string $parameter
 *
 * @see \Drupal\tops\TopsModule::GetRoutes();
 */
function tops_service_execute($serviceCode='',$parameter='') {
   \Drupal\tops\TopsModule::ExecuteService($serviceCode, $parameter);
}

function tops_script_execute($scriptName) {
    error_reporting(E_ALL);
    print "<h1>Script: $scriptName</h1>";
    $tops_script_startTime = time();
    print "<pre>\n";
    print'Started: '.date('m/d/Y h:i:s a', $tops_script_startTime)."\n\n";

    try {
        include(TPath::FromLib('App/scripts/'.$scriptName.'.php'));
    }
    catch(\Exception $ex) {
        print $ex->getMessage();
    }

    $tops_script_endTime = time();
    print "\n\nDone: ".date('m/d/Y h:i:s a', $tops_script_endTime)."\n</pre>";
    exit;
}

/**
 * Implementation of hook_help()
 *
 * Return text for admin page help
 * @param $path
 * @param $arg
 */

function tops_help($path, $arg) {
    \Drupal\tops\TopsModule::GetHelpContent($path,$arg);
}

/**
 * Implements hook_mail_alter().

function tops_mail_alter(&$message)
{
    $id = $message['id'];
    print "<pre>";
    print "$id\n\n";
    print_r($message['headers']);
    print "</pre>";
    exit ("Temporarily disabled. Try later please.");
}
 */


/**
*  Implement hook_init()
*  Perform TOPS bootstrap tasks
*/
function tops_init() {
    \Drupal\tops\TopsModule::Initialize();
}

/**
 * Implements hook_library().
 */
function tops_library()
{
    return \Drupal\tops\TopsModule::GetLibraries();
}

/**
* Implement hook_user
* Initialize of update tops user object

 function tops_user($op, &$edit, &$account, $category = null) {
    if ($category=='account' && $op == 'update') {
        $drupalAccount = new TDrupalAccount($account);
        \Drupal\tops\TopsModule::UpdateUser($drupalAccount);
    }
}
 */


/**
 * Implements hook_user_update().
 */
function tops_user_update(&$edit, $account, $category)
{
    if ($category=='account') {
        $drupalAccount = new TDrupalAccount($account);
        \Drupal\tops\TopsModule::UpdateUser($drupalAccount);
    }
}


/**
 * Implements hook_preprocess_html().
 */
function tops_preprocess_html(&$variables)
{
    \Drupal\tops\TopsModule::PreprocessHtml($variables);
}

/**
 * Implements hook_preprocess_page().
 */
function tops_preprocess_page(&$variables)
{
    \Drupal\tops\TopsModule::PreprocessPage($variables);
}

/**
 * Implements hook_permission().
 */
function tops_permission()
{
    return \Drupal\tops\TopsModule::GetPermissions();
}


/**
 * Implements hook_node_view().
 */
function tops_node_view($node, $view_mode, $langcode)
{
    if ($view_mode == 'full') {
        \Drupal\Tops\TopsModule::checkContentAccess($node);
    }
}
